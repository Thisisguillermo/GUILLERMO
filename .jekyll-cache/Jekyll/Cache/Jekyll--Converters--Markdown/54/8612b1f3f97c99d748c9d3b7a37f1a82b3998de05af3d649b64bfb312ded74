I"∑<p>So I figured out that, <code class="language-plaintext highlighter-rouge">yarn</code> may be better than <code class="language-plaintext highlighter-rouge">npm</code> when installing packages.</p>

<h2 id="intro">Intro</h2>

<p>So I figured out that, <code class="language-plaintext highlighter-rouge">yarn</code> may be better than <code class="language-plaintext highlighter-rouge">npm</code> when installing packages.
Reason why I use <code class="language-plaintext highlighter-rouge">yarn</code> instead of <code class="language-plaintext highlighter-rouge">npm</code> can be found here: <a href="https://engineering.fb.com/2016/10/11/web/yarn-a-new-package-manager-for-javascript/">Yarn: A new package manager for JavaScript</a></p>

<p>Along side these tools, I use Node Version Manager:</p>

<p><em>nvm is a version manager for node.js, designed to be installed per-user, and invoked per-shell. nvm works on any POSIX-compliant shell (sh, dash, ksh, zsh, bash), in particular on these platforms: unix, macOS, and windows WSL.</em> ~ https://github.com/nvm-sh/nvm</p>

<p>The reason why I use NVM:</p>

<ul>
  <li>Use other version of <code class="language-plaintext highlighter-rouge">npm</code>.</li>
  <li>Using <code class="language-plaintext highlighter-rouge">yarn</code> without installing it with <em>elevated rights</em></li>
</ul>

<h2 id="using-yarn">Using yarn</h2>

<p>Since I couldn‚Äôt use <code class="language-plaintext highlighter-rouge">yarn</code> on my system without(Fedora) using elevated rights. see error:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="o">[</span>guillermo@uhuh~]<span class="nv">$ </span>npm <span class="nb">install</span> <span class="nt">--global</span> yarn
npm ERR! code EACCES
npm ERR! syscall rename
npm ERR! path /usr/local/lib/node_modules/yarn
npm ERR! dest /usr/local/lib/node_modules/.yarn-Jrexx8nI
npm ERR! errno <span class="nt">-13</span>
npm ERR! Error: EACCES: permission denied, rename <span class="s1">'/usr/local/lib/node_modules/yarn'</span> -&gt; <span class="s1">'/usr/local/lib/node_modules/.yarn-Jrexx8nI'</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>I had to find a solution for this problem and my resolution was to use <code class="language-plaintext highlighter-rouge">nvm</code> which obviously using a good reason to use, even without <code class="language-plaintext highlighter-rouge">yarn</code>.
My source for the solution can be found here: <a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally">Resolving EACCES permissions errors when installing packages globally</a></p>

<h2 id="installing-nvm-and-yarn">Installing nvm and yarn</h2>

<p>So Installed this script: (I don‚Äôt like using scripts to install binaries, because that‚Äôs the job of the package manager.)</p>

<ol>
  <li>https://github.com/nvm-sh/nvm#install‚Äìupdate-script</li>
  <li>nvm install ‚Äìlts (for installing the latest nodejs LTS version)</li>
  <li>npm install ‚Äìglobal yarn</li>
</ol>

<p>For lazy people copy this:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>
 wget <span class="nt">-qO-</span> https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
 nvm <span class="nb">install</span> <span class="nt">--lts</span>
 npm <span class="nb">install</span> <span class="nt">--global</span> yarn
</pre></td></tr></tbody></table></code></pre></div></div>

<p>and use <code class="language-plaintext highlighter-rouge">yarn create-react-app my-app</code> to use yarn as packagemanger.</p>

<h2 id="using-yarn-eg-create-react-app-my-app">Using yarn e.g. create react-app my-app</h2>

<p>Accoridng to <a href="https://reactjs.org/docs/create-a-new-react-app.html">Create a New React App</a></p>

<p>You will need to use the command <code class="language-plaintext highlighter-rouge">npx create-react-app my-app</code> which is going to <code class="language-plaintext highlighter-rouge">npm</code> instead of <code class="language-plaintext highlighter-rouge">yarn</code> to install your packages. Which we don‚Äôt want.
The reason why <code class="language-plaintext highlighter-rouge">npx</code> defaults to <code class="language-plaintext highlighter-rouge">npm</code> is explained on GitHub by <a href="https://github.com/iansu">iansu</a>:</p>

<p><em>‚ÄúWe‚Äôve actually made some changes to this since the initial PR. Our goal is to make running create-react-app deterministic. With the old behaviour two people running npx create-react-app my-app could end up with different installs if one of them happened to have Yarn installed.</em></p>

<p><em>The new behaviour in this PR looks at how create-react-app was invoked and uses the corresponding package manager. npx create-react-app my-app will use npm and yarn dlx create-react-app my-app (or yarn create react-app my-app) will use Yarn. This will also potentially allow us to add support for other package managers by following the same pattern.‚Äù</em> [Source:] https://github.com/facebook/create-react-app/pull/11322</p>

<p>To use <code class="language-plaintext highlighter-rouge">yarn</code>, you will need to use the command <code class="language-plaintext highlighter-rouge">yarn create-react-app my-app</code>
Using <code class="language-plaintext highlighter-rouge">create-react-app my-app</code> will also use <code class="language-plaintext highlighter-rouge">npm</code> as package manager.</p>

:ET